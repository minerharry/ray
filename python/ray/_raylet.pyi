from typing import Awaitable, TypeVar
from  ray.includes.unique_ids import (
    ActorClassID, 
    ActorID,
    NodeID,
    JobID,
    WorkerID,
    FunctionID,
    TaskID,
    UniqueID,
    PlacementGroupID,
    ClusterID,
)
R = TypeVar("R")

class DynamicObjectRefGenerator: ...
class ObjectRefGenerator: ...
class ObjectRef(Awaitable[R]): ...
class ObjectID(Awaitable[R]): ...


class StreamRedirector: ...
class Language: ...

## TODO: CHECK THAT THESE AREN'T THEMSELVES IMPORTS IN RAYLET.PYX/PYD?
class MessagePackSerializer: ...
class MessagePackSerializedObject: ...
class Pickle5SerializedObject: ...
class Pickle5Writer: ...
class RawSerializedObject: ...
class SerializedObject: ...
def split_buffer(): ...
def unpack_pickle5_buffers(): ...


#Are these classes?
class PythonFunctionDescriptor: ... 
class GcsClient: ...
class GcsClientOptions: ...
class GlobalStateAccessor: ...
class Config: ...

#these are *definitely* not classes
class STREAMING_GENERATOR_RETURN: ... 
class WORKER_PROCESS_SETUP_HOOK_KEY_NAME_CS: ...
class GCS_PID_KEY: ...

def del_key_prefix_from_storage(): ...
def get_session_key_from_storage(): ...
def raise_sys_exit_with_custom_error_message(): ...